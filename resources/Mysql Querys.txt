1. Database creation
--- create database intranet;
2. company management table
--- create table companymanagement(id varchar(40) primary key, company_name varchar(100) unique not null, company_email varchar(50) not null, company_address varchar(300) not null, company_website varchar(200) not null, company_contact_no varchar(50) not null, company_status varchar(20) not null);
3. company pagesmanagement table
--- create table companypagesmanagement(id varchar(40) primary key, company_name varchar(200) not null, company_pagename varchar(100) not null, company_pagetype varchar(500) not null, company_pagestatus varchar(20) not null,companyId varchar(40) not null, foreign key(companyId) references companymanagement(id) on delete cascade, foreign key(company_name) references companymanagement(company_name) on update cascade); 
4. office holiday table
--- create table officeholidays(no int unique auto_increment, holidaylist_title varchar(100) not null, holiday_title varchar(100) not null, holiday_date date not null,holiday_day varchar(15) not null, pageId varchar(40) not null, foreign key(pageId) references companypagesmanagement(id) on delete cascade);
5. user management table
--- create table usermanagement(profile_pic varchar(200) not null, first_name varchar(100) not null, last_name varchar(100) not null, date_of_birth date not null, country varchar(100) not null,  gender varchar(20) not null, blood_group varchar(10) not null, company_name varchar(200) not null, about_yourself varchar(300) not null, employee_id int primary key, access varchar(50) not null, date_of_joining date not null, status varchar(50) not null, email varchar(200) unique not null, password varchar(100) not null, designation varchar(250) not null, foreign key(company_name) references companymanagement(company_name) on update cascade);
6. office charts table
--- create table officecharts(id int primary key auto_increment, chart_image varchar(200) not null, pageId varchar(40) not null,foreign key(pageId) references companypagesmanagement(id) on delete cascade);
7. announcement table
--- CREATE TABLE announcement (id INT AUTO_INCREMENT PRIMARY KEY,  company_name VARCHAR(100) NOT NULL,  title VARCHAR(100) NOT NULL,  description VARCHAR(300) NOT NULL, from_date date NOT NULL,to_date date not null, companyId varchar(40) not null,foreign key(companyId) references companymanagement(id) on delete cascade, foreign key(company_name) references companymanagement(company_name) on update cascade);
8. attendance table
--- create table attendance(id int auto_increment primary key, emp_id int not null, pdate varchar(10) not null, firstin float not null, lastout float not null, status varchar(5) not null,totalhrs float not null, updated_status varchar(5) default 'AA' not null, foreign key(emp_id) references usermanagement(employee_id));
9. reportingstructure table
--- create table reportingstructure(reporting_head int not null, users int not null,foreign key(reporting_head) references usermanagement(employee_id),foreign key(users) references usermanagement(employee_id));
10. contactinformation table
--- create table contactinformation(address varchar(300) not null, zip_code int not null, home_phone varchar(20) not null, home_phone_ext varchar(10) not null, office_phone varchar(20) not null, office_phone_ext varchar(10) not null, mobile1 varchar(20) not null, mobile2 varchar(20) not null, mobile3 varchar(20) not null, mobile4 varchar(20) not null, mobile5 varchar(20) not null,msn varchar(100) not null, aol varchar(100) not null, skype varchar(100) not null, yahoo varchar(100) not null, gtalk varchar(100) not null, emp_id int not null, foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
11. familyinformation table
--- create table familyinformation(spouse_name varchar(50) not null,no_of_kids int not null,kids_names varchar(300) not null, anniversary_date date , blood_group varchar(20) not null,emp_id int not null, foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
12. timezoneinformation table
--- create table timezoneinformation(timezone varchar(100) not null, emp_id int not null,foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
13. funinformation table
--- create table funinformation(favorite_movie varchar(100) not null, favorite_place varchar(100) not null, favorite_sport varchar(100) not null, favorite_food varchar(100) not null, favorite_actor  varchar(100) not null, favorite_actress varchar(100) not null, quote varchar(300) not null, good_quality varchar(500) not null, bad_quality varchar(300) not null, emp_id int not null, foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
14. applyleaves table
--- create table applyleaves(id varchar(40) not null primary key,mail_approved_by varchar(100) not null, cc_mail varchar(300) not null, leave_type varchar(30) not null, leave_option varchar(30) not null, from_date varchar(10) not null, to_date varchar(10) not null, selected_dates varchar(300) not null, half_day varchar(10) not null, total_leaves float not null, reason varchar(300) not null, status varchar(30) not null,emp_id int not null, applicant_name varchar(150) not null, applicant_email varchar(200) not null, foreign key(emp_id) references usermanagement(employee_id)); 